this.uPlot=this.uPlot||{},function(a){"use strict";function e(a,e,r,t){for(var i=1==t?e:r;i>=e&&r>=i;i+=t)if(null!=a[i])return i;return-1}var r=Math,t=r.round,i=r.min,l=r.max,n=r.pow,s=r.sqrt,o=devicePixelRatio,u=f(!1),v=f(!0);function f(a){return function(r,i,l,n,s,u){var v=r.series[i],f=r.data[0],h=r.data[i],c=r.series[0].scale,T=v.scale,p=r.valToPos,d=new Path2D;l=e(h,l,n,1),n=e(h,l,n,-1);var P=[],m=!1,w=t(p(h[l],T,!0)),x=t(p(f[l],c,!0)),D=x;d.moveTo(x,w);for(var b=l+1;n>=b;b++){var G=h[b],k=t(p(f[b],c,!0));if(null!=G){var g=t(p(G,T,!0));if(m){if(s(P,D,k),w!=g){var q=v.width*o/2,z=P[P.length-1];z[0]+=q,z[1]-=q}m=!1}a?d.lineTo(k,w):d.lineTo(D,g),d.lineTo(k,g),w=g,D=k}else v.isGap(r,i,b)&&(s(P,D,k),m=!0)}var A=new Path2D(d),B=v.fillTo(r,i,v.min,v.max),C=t(p(B,T,!0));return A.lineTo(D,C),A.lineTo(x,C),{stroke:d,fill:A,clip:v.spanGaps?null:u(P)}}}a.bars=function(a,e,r,n){for(var s=a.series[e],u=a.data[0],v=a.data[e],f=a.series[0].scale,h=s.scale,c=a.valToPos,T=.25*a.width/(n-r),p=c(s.fillTo(a,e,s.min,s.max),h,!0),d=a.bbox.width/(n-r),P=t(s.width*o),m=t(i(1/0,d-T)-P),w=new Path2D,x=r;n>=x;x++){var D=v[x];if(null!=D){var b=c(2==a.scales.x.distr?x:u[x],f,!0),G=c(D,h,!0),k=t(b-m/2),g=t(l(G,p)),q=t(i(G,p));w.rect(k,q,m,g-q)}}return{stroke:w,fill:null!=s.fill?new Path2D(w):void 0}},a.smooth=function(a,r,i,l,o,u){var v=a.series[r],f=a.data[0],h=a.data[r],c=a.series[0].scale,T=v.scale,p=a.valToPos;i=e(h,i,l,1),l=e(h,i,l,-1);for(var d=[],P=!1,m=t(p(f[i],c,!0)),w=m,x=[],D=[],b=i;l>=b;b++){var G=h[b],k=p(f[b],c,!0);null!=G?(P&&(o(d,w+1,k+1),P=!1),x.push(w=k),D.push(p(h[b],T,!0))):v.isGap(a,r,b)&&(o(d,w+1,k),P=!0)}var g=function(a,e,r){var i,l,o,u,v,f,h,c,T,p,d,P,m,w,x,D,b,G,k,g,q,z,A,B,C,M=new Path2D,R=a.length;M.moveTo(t(a[0]),t(e[0]));for(var j=0;R-1>j;j++){var y=0==j?0:j-1;l=e[y],u=e[j],v=a[j+1],f=e[j+1],R>j+2?(h=a[j+2],c=e[j+2]):(h=v,c=f),m=s(n((i=a[y])-(o=a[j]),2)+n(l-u,2)),w=s(n(o-v,2)+n(u-f,2)),x=s(n(v-h,2)+n(f-c,2)),g=n(x,r),z=n(x,1),q=n(w,r),A=n(w,1),(G=3*(C=n(m,r))*(C+q))>0&&(G=1/G),(k=3*g*(g+q))>0&&(k=1/k),p=(-A*l+(D=2*(B=n(m,1))+3*C*q+A)*u+B*f)*G,P=(z*u+(b=2*z+3*g*q+A)*f-A*c)*k,0==(T=(-A*i+D*o+B*v)*G)&&0==p&&(T=o,p=u),0==(d=(z*o+b*v-A*h)*k)&&0==P&&(d=v,P=f),M.bezierCurveTo(T,p,d,P,v,f)}return M}(x,D,.5),q=new Path2D(g),z=v.fillTo(a,r,v.min,v.max),A=t(p(z,T,!0));return q.lineTo(w,A),q.lineTo(m,A),{stroke:g,fill:q,clip:v.spanGaps?null:u(d)}},a.stepAfter=v,a.stepBefore=u}(this.uPlot.paths=this.uPlot.paths||{});
